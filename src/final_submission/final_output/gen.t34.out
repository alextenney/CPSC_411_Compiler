.text
.globl main
main:
  jal L0
  li $v0,10
  syscall
.data
G0:
   .word 0
.text
.data
G1:
  # "\n"
  .byte 10 , 0
  .align 2
.text
.data
char: .space 2
.text
Lgetchar: 
  addi $sp,$sp,-4
  sw $s0,0($sp)
  li $v0,8
  la $a0,char
  la $a1,2
  syscall
  lb $v0,char
  li $s0,4
  beq $v0,$s0,Lgetchar_eof
  li $s0,0
  beq $v0,$s0,Lgetchar_eof
Lgetchar_return:
  lw $s0 0($sp)
  addi $sp,$sp,4
  jr $ra 
Lgetchar_eof:
  li $v0,-1
  j Lgetchar_return
Lprints: 
  li $v0,4
  syscall
  jr $ra 
Lprinti: 
  li $v0,1
  syscall
  jr $ra 
.data
return_err: .asciiz "Runtime error: Function did not return\n"
divzero_err: .asciiz "Runtime error: Division by zero\n"
.text
Lhalt: 
  li $v0,10
  syscall
  jr $ra 
Lprintb: 
  li $v0,1
  syscall
  jr $ra 
Lprintc: 
  li $v0,11
  syscall
  jr $ra 
L1: # foo
  addi $sp,$sp,-92
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $a1,8($sp)
  sw $a2,12($sp)
  sw $a3,G0
  sw $t0,20($sp)
  sw $t1,24($sp)
  sw $t2,28($sp)
  sw $t3,32($sp)
  sw $t4,36($sp)
  sw $t5,40($sp)
  sw $t6,44($sp)
  sw $t7,48($sp)
  sw $t8,52($sp)
  sw $t9,56($sp)
  sw $s0,60($sp)
  sw $s1,64($sp)
  sw $s2,68($sp)
  sw $s3,72($sp)
  sw $s4,76($sp)
  sw $s5,80($sp)
  sw $s6,84($sp)
  sw $s7,88($sp)
L4: # *
  lw $s6,4($sp)
  lw $s5,8($sp)
  mul $s7,$s6,$s5
L5: # *
  lw $s6,12($sp)
  mul $s5,$s7,$s6
L6: # *
  lw $s7,G0
  mul $s6,$s5,$s7
  move $v0,$s6
  j L1CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L1CLEANUP: # foo return
  lw $t0,20($sp)
  lw $t1,24($sp)
  lw $t2,28($sp)
  lw $t3,32($sp)
  lw $t4,36($sp)
  lw $t5,40($sp)
  lw $t6,44($sp)
  lw $t7,48($sp)
  lw $t8,52($sp)
  lw $t9,56($sp)
  lw $s0,60($sp)
  lw $s1,64($sp)
  lw $s2,68($sp)
  lw $s3,72($sp)
  lw $s4,76($sp)
  lw $s5,80($sp)
  lw $s6,84($sp)
  lw $s7,88($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,92
  jr $ra
L2: # bar
  addi $sp,$sp,-88
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $a1,8($sp)
  sw $a2,12($sp)
  sw $t0,16($sp)
  sw $t1,20($sp)
  sw $t2,24($sp)
  sw $t3,28($sp)
  sw $t4,32($sp)
  sw $t5,36($sp)
  sw $t6,40($sp)
  sw $t7,44($sp)
  sw $t8,48($sp)
  sw $t9,52($sp)
  sw $s0,56($sp)
  sw $s1,60($sp)
  sw $s2,64($sp)
  sw $s3,68($sp)
  sw $s4,72($sp)
  sw $s5,76($sp)
  sw $s6,80($sp)
  sw $s7,84($sp)
  li $s7,3
L7: # -
  lw $s5,G0
  subu $s6,$s5,$s7
  lw $s7,4($sp)
  move $a0,$s7
  lw $s7,8($sp)
  move $a1,$s7
  lw $s7,12($sp)
  move $a2,$s7
  move $a3,$s6
  jal L1
  move $s6,$v0
  move $v0,$s6
  j L2CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L2CLEANUP: # bar return
  lw $t0,16($sp)
  lw $t1,20($sp)
  lw $t2,24($sp)
  lw $t3,28($sp)
  lw $t4,32($sp)
  lw $t5,36($sp)
  lw $t6,40($sp)
  lw $t7,44($sp)
  lw $t8,48($sp)
  lw $t9,52($sp)
  lw $s0,56($sp)
  lw $s1,60($sp)
  lw $s2,64($sp)
  lw $s3,68($sp)
  lw $s4,72($sp)
  lw $s5,76($sp)
  lw $s6,80($sp)
  lw $s7,84($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,88
  jr $ra
L3: # baz
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
  li $s7,1
L8: # +
  lw $s5,G0
  addu $s6,$s5,$s7
L9: # =
  sw $s6,G0
  lw $s6,4($sp)
  move $v0,$s6
  j L3CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L3CLEANUP: # baz return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L0: # main
  addi $sp,$sp,-4
  sw $ra,0($sp)
  li $s7,10
L10: # =
  sw $s7,G0
  li $s7,1
  li $s6,2
  li $s5,3
  move $a0,$s5
  jal L3
  move $s5,$v0
  li $s4,4
  move $a0,$s6
  move $a1,$s5
  move $a2,$s4
  jal L2
  move $s4,$v0
  li $s5,5
  li $s6,6
  move $a0,$s6
  jal L3
  move $s6,$v0
  li $s3,7
  move $a0,$s5
  move $a1,$s6
  move $a2,$s3
  jal L2
  move $s3,$v0
  li $s6,8
  move $a0,$s6
  jal L3
  move $s6,$v0
  move $a0,$s7
  move $a1,$s4
  move $a2,$s3
  move $a3,$s6
  jal L1
  move $s6,$v0
  move $a0,$s6
  jal Lprinti
  la $a0,G1
  jal Lprints
  lw $ra,0($sp) # b
  addi $sp,$sp,4
  jr $ra
