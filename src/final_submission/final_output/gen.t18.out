.text
.globl main
main:
  jal L0
  li $v0,10
  syscall
.data
G0:
   .word 0
.text
.data
G1:
   .word 0
.text
.data
G2:
  # "Internal error: too many ungets!\n"
  .byte 73 , 110 , 116 , 101 , 114 , 110 , 97 , 108 , 32 , 101 , 114 , 114 , 111 , 114 , 58 , 32 , 116 , 111 , 111 , 32 , 109 , 97 , 110 , 121 , 32 , 117 , 110 , 103 , 101 , 116 , 115 , 33 , 10 , 0
  .align 2
.text
.data
G3:
   .word 0
.text
.data
G4:
   .word 0
.text
.data
G5:
   .word 0
.text
.data
G6:
  # "Error: expected "
  .byte 69 , 114 , 114 , 111 , 114 , 58 , 32 , 101 , 120 , 112 , 101 , 99 , 116 , 101 , 100 , 32 , 0
  .align 2
.text
.data
G7:
  # "\n"
  .byte 10 , 0
  .align 2
.text
.data
G8:
  # "Error: invalid character.\n"
  .byte 69 , 114 , 114 , 111 , 114 , 58 , 32 , 105 , 110 , 118 , 97 , 108 , 105 , 100 , 32 , 99 , 104 , 97 , 114 , 97 , 99 , 116 , 101 , 114 , 46 , 10 , 0
  .align 2
.text
.data
G9:
  # " = "
  .byte 32 , 61 , 32 , 0
  .align 2
.text
.data
G10:
  # "\n"
  .byte 10 , 0
  .align 2
.text
.data
G11:
  # "Error: expected factor.\n"
  .byte 69 , 114 , 114 , 111 , 114 , 58 , 32 , 101 , 120 , 112 , 101 , 99 , 116 , 101 , 100 , 32 , 102 , 97 , 99 , 116 , 111 , 114 , 46 , 10 , 0
  .align 2
.text
.data
G12:
   .word 0
.text
.data
G13:
   .word 0
.text
.data
G14:
   .word 0
.text
.data
G15:
   .word 0
.text
.data
G16:
   .word 0
.text
.data
G17:
   .word 0
.text
.data
G18:
   .word 0
.text
.data
G19:
   .word 0
.text
.data
G20:
   .word 0
.text
.data
G21:
   .word 0
.text
.data
G22:
   .word 0
.text
.data
G23:
   .word 0
.text
.data
G24:
   .word 0
.text
.data
G25:
   .word 0
.text
.data
G26:
   .word 0
.text
.data
G27:
   .word 0
.text
.data
G28:
   .word 0
.text
.data
G29:
   .word 0
.text
.data
G30:
   .word 0
.text
.data
G31:
   .word 0
.text
.data
G32:
   .word 0
.text
.data
G33:
   .word 0
.text
.data
char: .space 2
.text
Lgetchar: 
  addi $sp,$sp,-4
  sw $s0,0($sp)
  li $v0,8
  la $a0,char
  la $a1,2
  syscall
  lb $v0,char
  li $s0,4
  beq $v0,$s0,Lgetchar_eof
  li $s0,0
  beq $v0,$s0,Lgetchar_eof
Lgetchar_return:
  lw $s0 0($sp)
  addi $sp,$sp,4
  jr $ra 
Lgetchar_eof:
  li $v0,-1
  j Lgetchar_return
Lprints: 
  li $v0,4
  syscall
  jr $ra 
Lprinti: 
  li $v0,1
  syscall
  jr $ra 
.data
return_err: .asciiz "Runtime error: Function did not return\n"
divzero_err: .asciiz "Runtime error: Division by zero\n"
.text
Lhalt: 
  li $v0,10
  syscall
  jr $ra 
Lprintb: 
  li $v0,1
  syscall
  jr $ra 
Lprintc: 
  li $v0,11
  syscall
  jr $ra 
L0: # main
  addi $sp,$sp,-4
  sw $ra,0($sp)
  jal L12
  jal L8
  lw $ra,0($sp) # b
  addi $sp,$sp,4
  jr $ra
L1: # getc
  addi $sp,$sp,-76
  sw $ra,0($sp)
  sw $t0,4($sp)
  sw $t1,8($sp)
  sw $t2,12($sp)
  sw $t3,16($sp)
  sw $t4,20($sp)
  sw $t5,24($sp)
  sw $t6,28($sp)
  sw $t7,32($sp)
  sw $t8,36($sp)
  sw $t9,40($sp)
  sw $s0,44($sp)
  sw $s1,48($sp)
  sw $s2,52($sp)
  sw $s3,56($sp)
  sw $s4,60($sp)
  sw $s5,64($sp)
  sw $s6,68($sp)
  sw $s7,72($sp)
L13: # if start
  lw $s7,G0
  beq $s7,$zero,L14
  li $s6,0
L15: # =
  sw $s6,G0
  lw $s6,G1
  move $v0,$s6
  j L1CLEANUP
L14: #if end
  jal Lgetchar
  move $s5,$v0
  move $v0,$s5
  j L1CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L1CLEANUP: # getc return
  lw $t0,4($sp)
  lw $t1,8($sp)
  lw $t2,12($sp)
  lw $t3,16($sp)
  lw $t4,20($sp)
  lw $t5,24($sp)
  lw $t6,28($sp)
  lw $t7,32($sp)
  lw $t8,36($sp)
  lw $t9,40($sp)
  lw $s0,44($sp)
  lw $s1,48($sp)
  lw $s2,52($sp)
  lw $s3,56($sp)
  lw $s4,60($sp)
  lw $s5,64($sp)
  lw $s6,68($sp)
  lw $s7,72($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,76
  jr $ra
L2: # ungetc
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
L16: # if start
  lw $s7,G0
  beq $s7,$zero,L17
  la $a0,G2
  jal Lprints
  jal Lhalt
L17: #if end
  li $s6,1
L18: # =
  sw $s6,G0
L19: # =
  lw $s6,4($sp)
  sw $s6,G1
L2CLEANUP: # ungetc return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L3: # peek
  addi $sp,$sp,-76
  sw $ra,0($sp)
  sw $t0,4($sp)
  sw $t1,8($sp)
  sw $t2,12($sp)
  sw $t3,16($sp)
  sw $t4,20($sp)
  sw $t5,24($sp)
  sw $t6,28($sp)
  sw $t7,32($sp)
  sw $t8,36($sp)
  sw $t9,40($sp)
  sw $s0,44($sp)
  sw $s1,48($sp)
  sw $s2,52($sp)
  sw $s3,56($sp)
  sw $s4,60($sp)
  sw $s5,64($sp)
  sw $s6,68($sp)
  sw $s7,72($sp)
L20: # if start
  lw $s7,G3
  beq $s7,$zero,L21
  lw $s6,G4
  move $v0,$s6
  j L3CLEANUP
L21: #if end
  li $s5,1
L22: # =
  sw $s5,G3
  jal L5
  move $s5,$v0
L23: # =
  sw $s5,G4
  lw $s5,G4
  move $v0,$s5
  j L3CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L3CLEANUP: # peek return
  lw $t0,4($sp)
  lw $t1,8($sp)
  lw $t2,12($sp)
  lw $t3,16($sp)
  lw $t4,20($sp)
  lw $t5,24($sp)
  lw $t6,28($sp)
  lw $t7,32($sp)
  lw $t8,36($sp)
  lw $t9,40($sp)
  lw $s0,44($sp)
  lw $s1,48($sp)
  lw $s2,52($sp)
  lw $s3,56($sp)
  lw $s4,60($sp)
  lw $s5,64($sp)
  lw $s6,68($sp)
  lw $s7,72($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,76
  jr $ra
L4: # match
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
L24: # if start
  jal L3
  move $s7,$v0
L26: # !=
  lw $s5,4($sp)
  bne $s7,$s5,L27
  li $s6,0
  j L28
L27:
  li $s6,1
L28:
  beq $s6,$zero,L25
  la $a0,G6
  jal Lprints
  lw $s5,4($sp)
  move $a0,$s5
  jal Lprintc
  la $a0,G10
  jal Lprints
  jal Lhalt
L25: #if end
  li $s6,0
L29: # =
  sw $s6,G3
L4CLEANUP: # match return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L5: # scanner
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
L30: # while start
  jal L1
  move $s7,$v0
L32: # =
  sw $s7,4($sp)
  lw $s7,4($sp)
  move $a0,$s7
  jal L7
  move $s7,$v0
  beq $s7,$zero,L31
j L30
L31: # while end
L33: # if start
L35: # ==
  lw $s6,4($sp)
  lw $s5,G12
  beq $s6,$s5,L36
  li $s7,0
  j L37
L36:
  li $s7,1
L37:
  beq $s7,$zero,L34
  lw $s5,G13
  move $v0,$s5
  j L5CLEANUP
L34: #if end
L38: # if start
L40: # ==
  lw $s6,4($sp)
  lw $s4,G33
  beq $s6,$s4,L41
  li $s7,0
  j L42
L41:
  li $s7,1
L42:
  beq $s7,$zero,L39
  lw $s4,G14
  move $v0,$s4
  j L5CLEANUP
L39: #if end
L43: # if start
L45: # ==
  lw $s6,4($sp)
  lw $s3,G24
  beq $s6,$s3,L46
  li $s7,0
  j L47
L46:
  li $s7,1
L47:
  beq $s7,$zero,L44
  lw $s3,G16
  move $v0,$s3
  j L5CLEANUP
L44: #if end
L48: # if start
L50: # ==
  lw $s6,4($sp)
  lw $s2,G25
  beq $s6,$s2,L51
  li $s7,0
  j L52
L51:
  li $s7,1
L52:
  beq $s7,$zero,L49
  lw $s2,G17
  move $v0,$s2
  j L5CLEANUP
L49: #if end
L53: # if start
L55: # ==
  lw $s6,4($sp)
  lw $s1,G26
  beq $s6,$s1,L56
  li $s7,0
  j L57
L56:
  li $s7,1
L57:
  beq $s7,$zero,L54
  lw $s1,G18
  move $v0,$s1
  j L5CLEANUP
L54: #if end
L58: # if start
L60: # ==
  lw $s6,4($sp)
  lw $s0,G27
  beq $s6,$s0,L61
  li $s7,0
  j L62
L61:
  li $s7,1
L62:
  beq $s7,$zero,L59
  lw $s0,G19
  move $v0,$s0
  j L5CLEANUP
L59: #if end
L63: # if start
L65: # ==
  lw $s6,4($sp)
  lw $t9,G28
  beq $s6,$t9,L66
  li $s7,0
  j L67
L66:
  li $s7,1
L67:
  beq $s7,$zero,L64
  lw $t9,G20
  move $v0,$t9
  j L5CLEANUP
L64: #if end
L68: # if start
L70: # ==
  lw $s6,4($sp)
  lw $t8,G29
  beq $s6,$t8,L71
  li $s7,0
  j L72
L71:
  li $s7,1
L72:
  beq $s7,$zero,L69
  lw $t8,G21
  move $v0,$t8
  j L5CLEANUP
L69: #if end
L73: # if start
  lw $s7,4($sp)
  move $a0,$s7
  jal L6
  move $s7,$v0
  beq $s7,$zero,L74
  li $s6,0
L75: # =
  sw $s6,G5
L76: # while start
  lw $s6,4($sp)
  move $a0,$s6
  jal L6
  move $s6,$v0
  beq $s6,$zero,L77
  li $t7,10
L78: # *
  lw $t5,G5
  mul $t6,$t5,$t7
L79: # -
  lw $t5,4($sp)
  lw $t4,G22
  subu $t7,$t5,$t4
L80: # +
  addu $t4,$t6,$t7
L81: # =
  sw $t4,G5
  jal L1
  move $t4,$v0
L82: # =
  sw $t4,4($sp)
j L76
L77: # while end
  lw $s6,4($sp)
  move $a0,$s6
  jal L2
  lw $s6,G15
  move $v0,$s6
  j L5CLEANUP
L74: #if end
  la $a0,G8
  jal Lprints
  jal Lhalt
  la $a0,return_err
  jal Lprints
  jal Lhalt
L5CLEANUP: # scanner return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L6: # isdigit
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
L83: # >=
  lw $s6,4($sp)
  lw $s5,G22
  bge $s6,$s5,L84
  li $s7,0
  j L85
L84:
  li $s7,1
L85:
  li $s5,0
  beq $s7,$zero,L86
L87: # <=
  lw $s4,4($sp)
  lw $s3,G23
  ble $s4,$s3,L88
  li $s6,0
  j L89
L88:
  li $s6,1
L89:
  beq $s6,$zero,L86
  li $s5,1
L86: # && skip
  move $v0,$s5
  j L6CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L6CLEANUP: # isdigit return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L7: # isspace
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $a0,4($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
L90: # ==
  lw $s6,4($sp)
  lw $s5,G30
  beq $s6,$s5,L91
  li $s7,0
  j L92
L91:
  li $s7,1
L92:
  li $s5,1
  bne $s7,$zero,L93
L94: # ==
  lw $s4,4($sp)
  lw $s3,G31
  beq $s4,$s3,L95
  li $s6,0
  j L96
L95:
  li $s6,1
L96:
  bne $s6,$zero,L93
  li $s5,0
L93: # || skip
  li $s3,1
  bne $s5,$zero,L97
L98: # ==
  lw $s2,4($sp)
  lw $s1,G32
  beq $s2,$s1,L99
  li $s4,0
  j L100
L99:
  li $s4,1
L100:
  bne $s4,$zero,L97
  li $s3,0
L97: # || skip
  move $v0,$s3
  j L7CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L7CLEANUP: # isspace return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L8: # parser
  addi $sp,$sp,-80
  sw $ra,0($sp)
  sw $t0,8($sp)
  sw $t1,12($sp)
  sw $t2,16($sp)
  sw $t3,20($sp)
  sw $t4,24($sp)
  sw $t5,28($sp)
  sw $t6,32($sp)
  sw $t7,36($sp)
  sw $t8,40($sp)
  sw $t9,44($sp)
  sw $s0,48($sp)
  sw $s1,52($sp)
  sw $s2,56($sp)
  sw $s3,60($sp)
  sw $s4,64($sp)
  sw $s5,68($sp)
  sw $s6,72($sp)
  sw $s7,76($sp)
L101: # while start
  jal L3
  move $s7,$v0
L103: # !=
  lw $s5,G13
  bne $s7,$s5,L104
  li $s6,0
  j L105
L104:
  li $s6,1
L105:
  beq $s6,$zero,L102
  jal L9
  move $s5,$v0
L106: # =
  sw $s5,4($sp)
  lw $s5,G14
  move $a0,$s5
  jal L4
  la $a0,G9
  jal Lprints
  lw $s5,4($sp)
  move $a0,$s5
  jal Lprinti
  la $a0,G10
  jal Lprints
j L101
L102: # while end
L8CLEANUP: # parser return
  lw $t0,8($sp)
  lw $t1,12($sp)
  lw $t2,16($sp)
  lw $t3,20($sp)
  lw $t4,24($sp)
  lw $t5,28($sp)
  lw $t6,32($sp)
  lw $t7,36($sp)
  lw $t8,40($sp)
  lw $t9,44($sp)
  lw $s0,48($sp)
  lw $s1,52($sp)
  lw $s2,56($sp)
  lw $s3,60($sp)
  lw $s4,64($sp)
  lw $s5,68($sp)
  lw $s6,72($sp)
  lw $s7,76($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,80
  jr $ra
L9: # E
  addi $sp,$sp,-88
  sw $ra,0($sp)
  sw $t0,16($sp)
  sw $t1,20($sp)
  sw $t2,24($sp)
  sw $t3,28($sp)
  sw $t4,32($sp)
  sw $t5,36($sp)
  sw $t6,40($sp)
  sw $t7,44($sp)
  sw $t8,48($sp)
  sw $t9,52($sp)
  sw $s0,56($sp)
  sw $s1,60($sp)
  sw $s2,64($sp)
  sw $s3,68($sp)
  sw $s4,72($sp)
  sw $s5,76($sp)
  sw $s6,80($sp)
  sw $s7,84($sp)
  jal L10
  move $s7,$v0
L107: # =
  sw $s7,4($sp)
L108: # while start
  jal L3
  move $s7,$v0
L110: # ==
  lw $s5,G16
  beq $s7,$s5,L111
  li $s6,0
  j L112
L111:
  li $s6,1
L112:
  li $s5,1
  bne $s6,$zero,L113
  jal L3
  move $s7,$v0
L114: # ==
  lw $s3,G17
  beq $s7,$s3,L115
  li $s4,0
  j L116
L115:
  li $s4,1
L116:
  bne $s4,$zero,L113
  li $s5,0
L113: # || skip
  beq $s5,$zero,L109
  jal L3
  move $s3,$v0
L117: # =
  sw $s3,12($sp)
  lw $s3,12($sp)
  move $a0,$s3
  jal L4
  jal L10
  move $s3,$v0
L118: # =
  sw $s3,8($sp)
L119: # ifelse start
L122: # ==
  lw $s7,12($sp)
  lw $s2,G16
  beq $s7,$s2,L123
  li $s3,0
  j L124
L123:
  li $s3,1
L124:
  beq $s3,$zero,L120
L125: # +
  lw $s7,4($sp)
  lw $s1,8($sp)
  addu $s2,$s7,$s1
L126: # =
  sw $s2,4($sp)
  j L121
L120: # ifelse else
L127: # -
  lw $s1,4($sp)
  lw $s7,8($sp)
  subu $s2,$s1,$s7
L128: # =
  sw $s2,4($sp)
L121: #ifelse end
j L108
L109: # while end
  lw $s5,4($sp)
  move $v0,$s5
  j L9CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L9CLEANUP: # E return
  lw $t0,16($sp)
  lw $t1,20($sp)
  lw $t2,24($sp)
  lw $t3,28($sp)
  lw $t4,32($sp)
  lw $t5,36($sp)
  lw $t6,40($sp)
  lw $t7,44($sp)
  lw $t8,48($sp)
  lw $t9,52($sp)
  lw $s0,56($sp)
  lw $s1,60($sp)
  lw $s2,64($sp)
  lw $s3,68($sp)
  lw $s4,72($sp)
  lw $s5,76($sp)
  lw $s6,80($sp)
  lw $s7,84($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,88
  jr $ra
L10: # T
  addi $sp,$sp,-88
  sw $ra,0($sp)
  sw $t0,16($sp)
  sw $t1,20($sp)
  sw $t2,24($sp)
  sw $t3,28($sp)
  sw $t4,32($sp)
  sw $t5,36($sp)
  sw $t6,40($sp)
  sw $t7,44($sp)
  sw $t8,48($sp)
  sw $t9,52($sp)
  sw $s0,56($sp)
  sw $s1,60($sp)
  sw $s2,64($sp)
  sw $s3,68($sp)
  sw $s4,72($sp)
  sw $s5,76($sp)
  sw $s6,80($sp)
  sw $s7,84($sp)
  jal L11
  move $s7,$v0
L129: # =
  sw $s7,4($sp)
L130: # while start
  jal L3
  move $s7,$v0
L132: # ==
  lw $s5,G18
  beq $s7,$s5,L133
  li $s6,0
  j L134
L133:
  li $s6,1
L134:
  li $s5,1
  bne $s6,$zero,L135
  jal L3
  move $s7,$v0
L136: # ==
  lw $s3,G19
  beq $s7,$s3,L137
  li $s4,0
  j L138
L137:
  li $s4,1
L138:
  bne $s4,$zero,L135
  li $s5,0
L135: # || skip
  beq $s5,$zero,L131
  jal L3
  move $s3,$v0
L139: # =
  sw $s3,12($sp)
  lw $s3,12($sp)
  move $a0,$s3
  jal L4
  jal L11
  move $s3,$v0
L140: # =
  sw $s3,8($sp)
L141: # ifelse start
L144: # ==
  lw $s7,12($sp)
  lw $s2,G18
  beq $s7,$s2,L145
  li $s3,0
  j L146
L145:
  li $s3,1
L146:
  beq $s3,$zero,L142
L147: # *
  lw $s7,4($sp)
  lw $s1,8($sp)
  mul $s2,$s7,$s1
L148: # =
  sw $s2,4($sp)
  j L143
L142: # ifelse else
L149: # /
  lw $s1,4($sp)
  lw $s7,8($sp)
  bne $s7,$zero,L150
  la $a0,divzero_err
  jal Lprints
  jal Lhalt
L150: # / divzero skip
  div $s1,$s7
  mflo $s2
L151: # =
  sw $s2,4($sp)
L143: #ifelse end
j L130
L131: # while end
  lw $s5,4($sp)
  move $v0,$s5
  j L10CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L10CLEANUP: # T return
  lw $t0,16($sp)
  lw $t1,20($sp)
  lw $t2,24($sp)
  lw $t3,28($sp)
  lw $t4,32($sp)
  lw $t5,36($sp)
  lw $t6,40($sp)
  lw $t7,44($sp)
  lw $t8,48($sp)
  lw $t9,52($sp)
  lw $s0,56($sp)
  lw $s1,60($sp)
  lw $s2,64($sp)
  lw $s3,68($sp)
  lw $s4,72($sp)
  lw $s5,76($sp)
  lw $s6,80($sp)
  lw $s7,84($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,88
  jr $ra
L11: # F
  addi $sp,$sp,-84
  sw $ra,0($sp)
  sw $t0,12($sp)
  sw $t1,16($sp)
  sw $t2,20($sp)
  sw $t3,24($sp)
  sw $t4,28($sp)
  sw $t5,32($sp)
  sw $t6,36($sp)
  sw $t7,40($sp)
  sw $t8,44($sp)
  sw $t9,48($sp)
  sw $s0,52($sp)
  sw $s1,56($sp)
  sw $s2,60($sp)
  sw $s3,64($sp)
  sw $s4,68($sp)
  sw $s5,72($sp)
  sw $s6,76($sp)
  sw $s7,80($sp)
  jal L3
  move $s7,$v0
L152: # =
  sw $s7,8($sp)
L153: # ifelse start
L156: # ==
  lw $s6,8($sp)
  lw $s5,G20
  beq $s6,$s5,L157
  li $s7,0
  j L158
L157:
  li $s7,1
L158:
  beq $s7,$zero,L154
  lw $s5,G20
  move $a0,$s5
  jal L4
  jal L9
  move $s5,$v0
L159: # =
  sw $s5,4($sp)
  lw $s5,G21
  move $a0,$s5
  jal L4
  j L155
L154: # ifelse else
L160: # ifelse start
L163: # ==
  lw $s6,8($sp)
  lw $s4,G17
  beq $s6,$s4,L164
  li $s5,0
  j L165
L164:
  li $s5,1
L165:
  beq $s5,$zero,L161
  lw $s4,G17
  move $a0,$s4
  jal L4
  jal L11
  move $s4,$v0
L166: # -
  negu $s6,$s4
L167: # =
  sw $s6,4($sp)
  j L162
L161: # ifelse else
L168: # ifelse start
L171: # ==
  lw $s4,8($sp)
  lw $s3,G15
  beq $s4,$s3,L172
  li $s6,0
  j L173
L172:
  li $s6,1
L173:
  beq $s6,$zero,L169
  lw $s3,G15
  move $a0,$s3
  jal L4
L174: # =
  lw $s3,G5
  sw $s3,4($sp)
  j L170
L169: # ifelse else
  la $a0,G11
  jal Lprints
  jal Lhalt
L170: #ifelse end
L162: #ifelse end
L155: #ifelse end
  lw $s7,4($sp)
  move $v0,$s7
  j L11CLEANUP
  la $a0,return_err
  jal Lprints
  jal Lhalt
L11CLEANUP: # F return
  lw $t0,12($sp)
  lw $t1,16($sp)
  lw $t2,20($sp)
  lw $t3,24($sp)
  lw $t4,28($sp)
  lw $t5,32($sp)
  lw $t6,36($sp)
  lw $t7,40($sp)
  lw $t8,44($sp)
  lw $t9,48($sp)
  lw $s0,52($sp)
  lw $s1,56($sp)
  lw $s2,60($sp)
  lw $s3,64($sp)
  lw $s4,68($sp)
  lw $s5,72($sp)
  lw $s6,76($sp)
  lw $s7,80($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,84
  jr $ra
L12: # init
  addi $sp,$sp,-76
  sw $ra,0($sp)
  sw $t0,4($sp)
  sw $t1,8($sp)
  sw $t2,12($sp)
  sw $t3,16($sp)
  sw $t4,20($sp)
  sw $t5,24($sp)
  sw $t6,28($sp)
  sw $t7,32($sp)
  sw $t8,36($sp)
  sw $t9,40($sp)
  sw $s0,44($sp)
  sw $s1,48($sp)
  sw $s2,52($sp)
  sw $s3,56($sp)
  sw $s4,60($sp)
  sw $s5,64($sp)
  sw $s6,68($sp)
  sw $s7,72($sp)
  li $s7,1
L175: # -
  negu $s6,$s7
L176: # =
  sw $s6,G12
  li $s6,48
L177: # =
  sw $s6,G22
  li $s6,57
L178: # =
  sw $s6,G23
  li $s6,43
L179: # =
  sw $s6,G24
  li $s6,45
L180: # =
  sw $s6,G25
  li $s6,42
L181: # =
  sw $s6,G26
  li $s6,47
L182: # =
  sw $s6,G27
  li $s6,40
L183: # =
  sw $s6,G28
  li $s6,41
L184: # =
  sw $s6,G29
  li $s6,32
L185: # =
  sw $s6,G30
  li $s6,9
L186: # =
  sw $s6,G31
  li $s6,13
L187: # =
  sw $s6,G32
  li $s6,10
L188: # =
  sw $s6,G33
  li $s6,256
L189: # =
  sw $s6,G13
  li $s6,257
L190: # =
  sw $s6,G15
L191: # =
  lw $s6,G24
  sw $s6,G16
L192: # =
  lw $s6,G25
  sw $s6,G17
L193: # =
  lw $s6,G26
  sw $s6,G18
L194: # =
  lw $s6,G27
  sw $s6,G19
L195: # =
  lw $s6,G28
  sw $s6,G20
L196: # =
  lw $s6,G29
  sw $s6,G21
L197: # =
  lw $s6,G33
  sw $s6,G14
L12CLEANUP: # init return
  lw $t0,4($sp)
  lw $t1,8($sp)
  lw $t2,12($sp)
  lw $t3,16($sp)
  lw $t4,20($sp)
  lw $t5,24($sp)
  lw $t6,28($sp)
  lw $t7,32($sp)
  lw $t8,36($sp)
  lw $t9,40($sp)
  lw $s0,44($sp)
  lw $s1,48($sp)
  lw $s2,52($sp)
  lw $s3,56($sp)
  lw $s4,60($sp)
  lw $s5,64($sp)
  lw $s6,68($sp)
  lw $s7,72($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,76
  jr $ra
