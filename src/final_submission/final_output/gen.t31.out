.text
.globl main
main:
  jal L0
  li $v0,10
  syscall
.data
G0:
   .word 0
.text
.data
G1:
   .word 0
.text
.data
char: .space 2
.text
Lgetchar: 
  addi $sp,$sp,-4
  sw $s0,0($sp)
  li $v0,8
  la $a0,char
  la $a1,2
  syscall
  lb $v0,char
  li $s0,4
  beq $v0,$s0,Lgetchar_eof
  li $s0,0
  beq $v0,$s0,Lgetchar_eof
Lgetchar_return:
  lw $s0 0($sp)
  addi $sp,$sp,4
  jr $ra 
Lgetchar_eof:
  li $v0,-1
  j Lgetchar_return
Lprints: 
  li $v0,4
  syscall
  jr $ra 
Lprinti: 
  li $v0,1
  syscall
  jr $ra 
.data
return_err: .asciiz "Runtime error: Function did not return\n"
divzero_err: .asciiz "Runtime error: Division by zero\n"
.text
Lhalt: 
  li $v0,10
  syscall
  jr $ra 
Lprintb: 
  li $v0,1
  syscall
  jr $ra 
Lprintc: 
  li $v0,11
  syscall
  jr $ra 
L0: # main
  addi $sp,$sp,-4
  sw $ra,0($sp)
  li $s7,12
L2: # =
  sw $s7,G0
  jal L1
  li $s7,2
L3: # -
  lw $s5,G1
  subu $s6,$s5,$s7
L4: # /
  lw $s5,G0
  bne $s6,$zero,L5
  la $a0,divzero_err
  jal Lprints
  jal Lhalt
L5: # / divzero skip
  div $s5,$s6
  mflo $s7
  move $a0,$s7
  jal Lprinti
  lw $ra,0($sp) # b
  addi $sp,$sp,4
  jr $ra
L1: # foo
  addi $sp,$sp,-76
  sw $ra,0($sp)
  sw $t0,4($sp)
  sw $t1,8($sp)
  sw $t2,12($sp)
  sw $t3,16($sp)
  sw $t4,20($sp)
  sw $t5,24($sp)
  sw $t6,28($sp)
  sw $t7,32($sp)
  sw $t8,36($sp)
  sw $t9,40($sp)
  sw $s0,44($sp)
  sw $s1,48($sp)
  sw $s2,52($sp)
  sw $s3,56($sp)
  sw $s4,60($sp)
  sw $s5,64($sp)
  sw $s6,68($sp)
  sw $s7,72($sp)
  li $s7,2
L6: # =
  sw $s7,G1
L1CLEANUP: # foo return
  lw $t0,4($sp)
  lw $t1,8($sp)
  lw $t2,12($sp)
  lw $t3,16($sp)
  lw $t4,20($sp)
  lw $t5,24($sp)
  lw $t6,28($sp)
  lw $t7,32($sp)
  lw $t8,36($sp)
  lw $t9,40($sp)
  lw $s0,44($sp)
  lw $s1,48($sp)
  lw $s2,52($sp)
  lw $s3,56($sp)
  lw $s4,60($sp)
  lw $s5,64($sp)
  lw $s6,68($sp)
  lw $s7,72($sp)
  lw $ra,0($sp) # c
  addi $sp,$sp,76
  jr $ra
